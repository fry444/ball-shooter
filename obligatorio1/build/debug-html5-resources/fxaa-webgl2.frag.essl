#version 300 es
precision mediump float;
precision highp int;

uniform highp vec2 screenSizeInv;
uniform highp sampler2D tex;

in highp vec2 texCoord;
out highp vec4 fragColor;

void main()
{
    highp vec2 tcrgbNW = texCoord + (vec2(-1.0) * screenSizeInv);
    highp vec2 tcrgbNE = texCoord + (vec2(1.0, -1.0) * screenSizeInv);
    highp vec2 tcrgbSW = texCoord + (vec2(-1.0, 1.0) * screenSizeInv);
    highp vec2 tcrgbSE = texCoord + (vec2(1.0) * screenSizeInv);
    highp vec2 tcrgbM = vec2(texCoord);
    highp vec3 rgbNW = texture(tex, tcrgbNW).xyz;
    highp vec3 rgbNE = texture(tex, tcrgbNE).xyz;
    highp vec3 rgbSW = texture(tex, tcrgbSW).xyz;
    highp vec3 rgbSE = texture(tex, tcrgbSE).xyz;
    highp vec4 texColor = texture(tex, tcrgbM);
    highp vec3 rgbM = texColor.xyz;
    highp vec3 luma = vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625);
    highp float lumaNW = dot(rgbNW, luma);
    highp float lumaNE = dot(rgbNE, luma);
    highp float lumaSW = dot(rgbSW, luma);
    highp float lumaSE = dot(rgbSE, luma);
    highp float lumaM = dot(rgbM, luma);
    highp float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));
    highp float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));
    highp vec2 dir;
    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));
    dir.y = (lumaNW + lumaSW) - (lumaNE + lumaSE);
    highp float dirReduce = max((((lumaNW + lumaNE) + lumaSW) + lumaSE) * 0.083333335816860198974609375, 0.0199999995529651641845703125);
    highp float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);
    dir = min(vec2(4.0), max(vec2(-4.0), dir * rcpDirMin)) * screenSizeInv;
    highp vec4 rgbA = (texture(tex, texCoord + (dir * (-0.16666667163372039794921875))) + texture(tex, texCoord + (dir * 0.16666667163372039794921875))) * 0.5;
    fragColor = (rgbA * 0.5) + ((texture(tex, texCoord + (dir * (-0.5))) + texture(tex, texCoord + (dir * 0.5))) * 0.25);
    highp float lumaB = dot(fragColor.xyz, luma);
    if ((lumaB < lumaMin) || (lumaB > lumaMax))
    {
        fragColor = rgbA;
    }
}

